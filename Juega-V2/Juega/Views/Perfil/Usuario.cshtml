@model Juega.Models.Juega.EditarPerfil_Modelo

@{
    ViewBag.Title = "Index";
}

<h3>Editar perfil</h3>

<style type="Text/CSS">
    .btn {
        font-family: 'Times New Roman';
        font-size: 16px;
        text-align: center;
    }
</style>
@using (Html.BeginForm("Editar_Perfil", "Perfil"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <section>
        <center>
            <div class="container">
                <div class="row clearfix" id="content-row">



                    <div class="col-xs-10 column">

                        <div class="well" id="volume-fees-well">
                            <br />
                            <div class="panel panel-primary">

                                <div class="panel-heading">
                                    <h3 class="panel-title">Informacion</h3>
                                </div>

                                <div class="panel-body">
                                    <form name="Show_Profile">
                                        <fieldset>
                                            <div class="col-md-3">
                                                <br />
                                                <img src="~/Content/Images/futbol.png" class="img-responsive img-rounded" />
                                            </div>
                                            <br />


                                            <div class="editor-field">
                                                @Html.HiddenFor(model => model.IdUsuario, new { @class = "form-control required", @hidden = "hidden" })
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label class="control-label" for="Nombre">Nombre</label>
                                                    <div class="controls">
                                                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control required" })
                                                        @*<input type="text" data-ng-model="Usuario.Nombre" maxlength="25" class="form-control">*@
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label" for="Apellido">Apellido</label>
                                                    <div class="controls">
                                                        @Html.TextBoxFor(model => model.Apellido, new { @class = "form-control required" })
                                                        @*<input type="text" data-ng-model="Usuario.Apellido" maxlength="25" class="form-control">*@
                                                    </div>
                                                </div>
                                                
                                                @*@using (Html.BeginForm("Action", "Controller", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                                {
                                                    @Html.TextBoxFor(m => m.FotoPrincipal, new { type = "file" })
                                                    @Html.ValidationMessageFor(m => m.FotoPrincipal)
                                                }*@


                                                <div class="jumbotron">
                                                    <div class="fallback">
                                                        <input name="file" type="file" enctype="multipart/form-data" class="dropzone" id="file" />
                                                        <input type="submit" value="Upload" />
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label class="control-label" for="FechaNacimiento">Fecha Nacimiento</label>
                                                    <div class="controls">
                                                        @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control required" })
                                                        @*<input type="datetime" class="form-control" data-ng-model="Usuario.FechaNacimiento">
                                                            </div>*@
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label" for="Descripcion">Descripcion</label>
                                                        <div class="controls">
                                                            @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control required", @rows = "10" })
                                                            @*<textarea class="form-control" rows="5" cols="10" maxlength="450" data-ng-model="Usuario.Descripcion"></textarea>*@
                                                        </div>
                                                    </div>
                                                </div>
                                        </fieldset>
                                    </form>
                                </div>


                                <div class="modal-footer">
                                    <button class="btn btn-success btn-lg" ng-click="Guardar()">Actualizar</button>
                                    <a href="/Manage/Index/" class="mb-sm btn btn-primary">Administrar clave / Login</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </center>
    </section>

}

@section scripts{

    <script type="text/javascript">

        //File Upload response from the server
        Dropzone.options.dropzoneForm = {
            maxFiles: 2,
            init: function () {
                this.on("maxfilesexceeded", function (data) {
                    var res = eval('(' + data.xhr.responseText + ')');

                });
                this.on("addedfile", function (file) {

                    // Create the remove button
                    var removeButton = Dropzone.createElement("<button>Remove file</button>");


                    // Capture the Dropzone instance as closure.
                    var _this = this;

                    // Listen to the click event
                    removeButton.addEventListener("click", function (e) {
                        // Make sure the button click doesn't submit the form:
                        e.preventDefault();
                        e.stopPropagation();
                        // Remove the file preview.
                        _this.removeFile(file);
                        // If you want to the delete the file on the server as well,
                        // you can do the AJAX request here.
                    });

                    // Add the button to the file preview element.
                    file.previewElement.appendChild(removeButton);
                });
            }
        };






    </script>
}