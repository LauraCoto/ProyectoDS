<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta name="description" content="Bootstrap Admin App + jQuery">
    <meta name="keywords" content="app, responsive, jquery, bootstrap, dashboard, admin">
    <title>Angle - Bootstrap Admin Template</title>
    <!-- =============== VENDOR STYLES ===============-->
    @Styles.Render("~/bundles/fontawesome")
    @Styles.Render("~/bundles/simpleLineIcons")
    @Styles.Render("~/bundles/animatecss")
    @Styles.Render("~/bundles/whirl")
    <!-- =============== PAGE VENDOR STYLES =============== -->
    @if (IsSectionDefined("Styles"))
        {@RenderSection("Styles", required: false)}
    <!-- =============== BOOTSTRAP STYLES ===============-->
    <link href="@Styles.Url("~/Content/app/css/bootstrap.css")" rel="stylesheet" type="text/css" id="bscss" />
    <!-- =============== APP STYLES ===============-->
    <link href="@Styles.Url("~/Content/app/css/app.css")" rel="stylesheet" type="text/css" id="maincss" />
    <script src="~/Scripts/angular.min.js"></script>
     <script src="~/app/app.js"></script>
    <script src="~/app/controller/PageMenuCtrl.js"></script>
    <script src="~/app/controller/CargarEquiposController.js"></script>

</head>
<body>
    <div class="wrapper">
        <!-- top navbar-->
        <header class="topnavbar-wrapper">
            @Html.Partial("_TopNavbar")
        </header>
        <!-- sidebar-->
        <aside class="aside">
            @Html.Partial("_Sidebar")
        </aside>
        <!-- offsidebar-->
        <aside class="offsidebar">
            @Html.Partial("_Offsidebar")
        </aside>
        <!-- Main section-->
        <section>
            <!-- Page content-->
            <div class="content-wrapper">
                @RenderBody()
            </div>
        </section>
        <!-- Page footer-->
        <footer>
            @Html.Partial("_Footer")
        </footer>
    </div>
    @if (IsSectionDefined("BodyArea"))
        {@RenderSection("BodyArea", required: false)}
    <!-- =============== VENDOR SCRIPTS ===============-->
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/storage")
    @Scripts.Render("~/bundles/jqueryEasing")
    @Scripts.Render("~/bundles/animo")
    @Scripts.Render("~/bundles/slimscroll")
    @Scripts.Render("~/bundles/screenfull")
    @Scripts.Render("~/bundles/localize")
    @Scripts.Render("~/bundles/demoRTL")
    <!-- =============== PAGE VENDOR SCRIPTS ===============-->
    @RenderSection("scripts", required: false)
    <!-- =============== APP SCRIPTS ===============-->
    @Scripts.Render("~/bundles/Angle")
    @Scripts.Render("~/bundles/Juega")
</body>



@*</html>
 <style>
    html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px;
    }
</style>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true"></script>
<script>
    // This example creates circles on the map, representing
    // populations in North America.

    $(document).ready(function () {

        initialize();
    });


    // First, create an object containing LatLng and population for each city.
    var citymap = {};
    citymap['chicago'] = {
        center: new google.maps.LatLng(41.878113, -87.629798),
        population: 2714856
    };
    citymap['newyork'] = {
        center: new google.maps.LatLng(40.714352, -74.005973),
        population: 8405837
    };
    citymap['losangeles'] = {
        center: new google.maps.LatLng(34.052234, -118.243684),
        population: 3857799
    };
    citymap['vancouver'] = {
        center: new google.maps.LatLng(49.25, -123.1),
        population: 603502
    };

    var cityCircle;

    function initialize() {
        // Create the map.
        var mapOptions = {
            zoom: 4,
            center: new google.maps.LatLng(37.09024, -95.712891),
            mapTypeId: google.maps.MapTypeId.TERRAIN
        };

        var map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);

        // Construct the circle for each value in citymap.
        // Note: We scale the area of the circle based on the population.
        for (var city in citymap) {
            var populationOptions = {
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35,
                map: map,
                center: citymap[city].center,
                radius: Math.sqrt(citymap[city].population) * 100
            };
            // Add the circle for this city to the map.
            cityCircle = new google.maps.Circle(populationOptions);
        }
    }

    google.maps.event.addDomListener(window, 'load', initialize);

</script>*@
